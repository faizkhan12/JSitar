{"ast":null,"code":"import bundle from \"../../bundler\";\nimport { ActionType } from \"../action-types\";\nexport const updateCell = (id, content) => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content\n    }\n  };\n};\nexport const deleteCell = id => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id\n  };\n};\nexport const moveCell = (id, direction) => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction\n    }\n  };\n};\nexport const insertCellAfter = (id, cellType) => {\n  return {\n    type: ActionType.INSERT_CELL_AFTER,\n    payload: {\n      id,\n      type: cellType\n    }\n  };\n};\nexport const createBundle = (cellId, input) => {\n  return async dispatch => {\n    dispatch({\n      type: ActionType.BUNDLE_START,\n      payload: {\n        cellId\n      }\n    });\n    const result = await bundle(input);\n    console.log(\"Result \" + result);\n    dispatch({\n      type: ActionType.BUNDLE_COMPLETE,\n      payload: {\n        cellId,\n        bundle: {\n          code: result.code,\n          err: result.err\n        }\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/faiz/react-tutorial/readme-generator/src/redux/action-creators/index.ts"],"names":["bundle","ActionType","updateCell","id","content","type","UPDATE_CELL","payload","deleteCell","DELETE_CELL","moveCell","direction","MOVE_CELL","insertCellAfter","cellType","INSERT_CELL_AFTER","createBundle","cellId","input","dispatch","BUNDLE_START","result","console","log","BUNDLE_COMPLETE","code","err"],"mappings":"AACA,OAAOA,MAAP,MAAmB,eAAnB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAWA,OAAO,MAAMC,UAAU,GAAG,CAACC,EAAD,EAAaC,OAAb,KAAmD;AAC3E,SAAO;AACLC,IAAAA,IAAI,EAAEJ,UAAU,CAACK,WADZ;AAELC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EADO;AAEPC,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAMI,UAAU,GAAIL,EAAD,IAAkC;AAC1D,SAAO;AACLE,IAAAA,IAAI,EAAEJ,UAAU,CAACQ,WADZ;AAELF,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMO,QAAQ,GAAG,CAACP,EAAD,EAAaQ,SAAb,KAAsD;AAC5E,SAAO;AACLN,IAAAA,IAAI,EAAEJ,UAAU,CAACW,SADZ;AAELL,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EADO;AAEPQ,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAME,eAAe,GAAG,CAC7BV,EAD6B,EAE7BW,QAF6B,KAGH;AAC1B,SAAO;AACLT,IAAAA,IAAI,EAAEJ,UAAU,CAACc,iBADZ;AAELR,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EADO;AAEPE,MAAAA,IAAI,EAAES;AAFC;AAFJ,GAAP;AAOD,CAXM;AAaP,OAAO,MAAME,YAAY,GAAG,CAACC,MAAD,EAAiBC,KAAjB,KAAmC;AAC7D,SAAO,MAAOC,QAAP,IAAsC;AAC3CA,IAAAA,QAAQ,CAAC;AACPd,MAAAA,IAAI,EAAEJ,UAAU,CAACmB,YADV;AAEPb,MAAAA,OAAO,EAAE;AACPU,QAAAA;AADO;AAFF,KAAD,CAAR;AAOA,UAAMI,MAAM,GAAG,MAAMrB,MAAM,CAACkB,KAAD,CAA3B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,MAAxB;AAEAF,IAAAA,QAAQ,CAAC;AACPd,MAAAA,IAAI,EAAEJ,UAAU,CAACuB,eADV;AAEPjB,MAAAA,OAAO,EAAE;AACPU,QAAAA,MADO;AAEPjB,QAAAA,MAAM,EAAE;AACNyB,UAAAA,IAAI,EAAEJ,MAAM,CAACI,IADP;AAENC,UAAAA,GAAG,EAAEL,MAAM,CAACK;AAFN;AAFD;AAFF,KAAD,CAAR;AAUD,GArBD;AAsBD,CAvBM","sourcesContent":["import { Dispatch } from \"redux\"\nimport bundle from \"../../bundler\"\nimport { ActionType } from \"../action-types\"\nimport {\n  Action,\n  DeleteCellAction,\n  Direction,\n  InsertCellAfterAction,\n  MoveCellAction,\n  UpdateCellAction,\n} from \"../actions\"\nimport { CellTypes } from \"../cell\"\n\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content,\n    },\n  }\n}\n\nexport const deleteCell = (id: string): DeleteCellAction => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id,\n  }\n}\n\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction,\n    },\n  }\n}\n\nexport const insertCellAfter = (\n  id: string | null,\n  cellType: CellTypes\n): InsertCellAfterAction => {\n  return {\n    type: ActionType.INSERT_CELL_AFTER,\n    payload: {\n      id,\n      type: cellType,\n    },\n  }\n}\n\nexport const createBundle = (cellId: string, input: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({\n      type: ActionType.BUNDLE_START,\n      payload: {\n        cellId,\n      },\n    })\n\n    const result = await bundle(input)\n    console.log(\"Result \" + result)\n\n    dispatch({\n      type: ActionType.BUNDLE_COMPLETE,\n      payload: {\n        cellId,\n        bundle: {\n          code: result.code,\n          err: result.err,\n        },\n      },\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}