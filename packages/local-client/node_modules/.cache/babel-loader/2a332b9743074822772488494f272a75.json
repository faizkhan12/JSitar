{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/faiz/react-tutorial/readme-generator/src/components/preview.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport \"./preview.css\";\n//  taking bundeled output & pushing it in the iframe\nconst html = `\n<html>\n  <head></head>\n  <body>\n    <div id=\"root\"></div>\n    <script>\n    const handleError = (err) => {\n      const root = document.querySelector('#root')\n      root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>'\n      console.log(err)\n    }\n    window.addEventListener('error', (event) => {\n      event.preventDefault()\n      handleError(event.error)\n    })\n    window.addEventListener('message', (event) => {\n        try {\n        eval(event.data)\n        } catch (err) {\n          handleError(err)\n        }\n      }, false)\n    </script>\n  </body>\n</html>\n`;\n\nconst Preview = ({\n  code,\n  status\n}) => {\n  _s();\n\n  const iframe = useRef();\n  useEffect(() => {\n    // resetting the contents of iframe\n    iframe.current.srcdoc = html;\n    setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, \"*\");\n    }, 50);\n  }, [code]);\n  console.log(status);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"preview\",\n      ref: iframe,\n      srcDoc: html,\n      sandbox: \"allow-scripts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-error\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Preview, \"GAFleWBZ6O+8Op7dBuDH6PzOglQ=\");\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/faiz/react-tutorial/readme-generator/src/components/preview.tsx"],"names":["useEffect","useRef","html","Preview","code","status","iframe","current","srcdoc","setTimeout","contentWindow","postMessage","console","log"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAO,eAAP;AAMA;AACA,MAAMC,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;;AA2BA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAAA;;AAC5D,QAAMC,MAAM,GAAGL,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBN,IAAxB;AACAO,IAAAA,UAAU,CAAC,MAAM;AACfH,MAAAA,MAAM,CAACC,OAAP,CAAeG,aAAf,CAA6BC,WAA7B,CAAyCP,IAAzC,EAA+C,GAA/C;AACD,KAFS,EAEP,EAFO,CAAV;AAGD,GANQ,EAMN,CAACA,IAAD,CANM,CAAT;AAOAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,GAAG,EAAEC,MAFP;AAGE,MAAA,MAAM,EAAEJ,IAHV;AAIE,MAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,YADF,EAQGG,MAAM,iBAAI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,YARb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvBD;;GAAMF,O;;KAAAA,O;AAyBN,eAAeA,OAAf","sourcesContent":["import { useEffect, useRef } from \"react\"\nimport \"./preview.css\"\n\ninterface PreviewProps {\n  code: string\n  status: String\n}\n//  taking bundeled output & pushing it in the iframe\nconst html = `\n<html>\n  <head></head>\n  <body>\n    <div id=\"root\"></div>\n    <script>\n    const handleError = (err) => {\n      const root = document.querySelector('#root')\n      root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>'\n      console.log(err)\n    }\n    window.addEventListener('error', (event) => {\n      event.preventDefault()\n      handleError(event.error)\n    })\n    window.addEventListener('message', (event) => {\n        try {\n        eval(event.data)\n        } catch (err) {\n          handleError(err)\n        }\n      }, false)\n    </script>\n  </body>\n</html>\n`\n\nconst Preview: React.FC<PreviewProps> = ({ code, status }) => {\n  const iframe = useRef<any>()\n\n  useEffect(() => {\n    // resetting the contents of iframe\n    iframe.current.srcdoc = html\n    setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, \"*\")\n    }, 50)\n  }, [code])\n  console.log(status)\n  return (\n    <div className='preview-wrapper'>\n      <iframe\n        title='preview'\n        ref={iframe}\n        srcDoc={html}\n        sandbox='allow-scripts'\n      />\n\n      {status && <div className='preview-error'>{status}</div>}\n    </div>\n  )\n}\n\nexport default Preview\n"]},"metadata":{},"sourceType":"module"}