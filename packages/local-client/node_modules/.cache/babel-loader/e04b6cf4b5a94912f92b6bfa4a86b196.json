{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/faiz/react-tutorial/readme-generator/jstrings/packages/local-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import MDEditor from\"@uiw/react-md-editor\";import{useEffect,useRef,useState}from\"react\";import{useActions}from\"../hooks/use-actions\";import\"./text-editor.css\";var TextEditor=function TextEditor(_ref){var cell=_ref.cell;var ref=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editing=_useState2[0],setEditing=_useState2[1];var _useActions=useActions(),updateCell=_useActions.updateCell;useEffect(function(){var listener=function listener(event){if(ref.current&&event.target&&ref.current.contains(event.target)){return;}setEditing(false);};document.addEventListener(\"click\",listener,{capture:true});return function(){document.removeEventListener(\"click\",listener,{capture:true});};},[]);if(editing){return/*#__PURE__*/_jsx(\"div\",{className:\"text-editor\",ref:ref,children:/*#__PURE__*/_jsx(MDEditor,{value:cell.content,onChange:function onChange(v){return updateCell(cell.id,v||\"\");}})});}return/*#__PURE__*/_jsx(\"div\",{className:\"text-editor card\",onClick:function onClick(){return setEditing(true);},children:/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsx(MDEditor.Markdown,{source:cell.content||\"Click to edit\"})})});};export default TextEditor;","map":{"version":3,"sources":["/home/faiz/react-tutorial/readme-generator/jstrings/packages/local-client/src/components/text-editor.tsx"],"names":["MDEditor","useEffect","useRef","useState","useActions","TextEditor","cell","ref","editing","setEditing","updateCell","listener","event","current","target","contains","document","addEventListener","capture","removeEventListener","content","v","id"],"mappings":"2OAAA,MAAOA,CAAAA,QAAP,KAAqB,sBAArB,CACA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,UAAT,KAA2B,sBAA3B,CAEA,MAAO,mBAAP,CAMA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC1D,GAAMC,CAAAA,GAAG,CAAGL,MAAM,CAAwB,IAAxB,CAAlB,CAD0D,cAE5BC,QAAQ,CAAC,KAAD,CAFoB,wCAEnDK,OAFmD,eAE1CC,UAF0C,+BAGnCL,UAAU,EAHyB,CAGlDM,UAHkD,aAGlDA,UAHkD,CAK1DT,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAuB,CACtC,GACEL,GAAG,CAACM,OAAJ,EACAD,KAAK,CAACE,MADN,EAEAP,GAAG,CAACM,OAAJ,CAAYE,QAAZ,CAAqBH,KAAK,CAACE,MAA3B,CAHF,CAIE,CACA,OACD,CAEDL,UAAU,CAAC,KAAD,CAAV,CACD,CAVD,CAWAO,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmCN,QAAnC,CAA6C,CAAEO,OAAO,CAAE,IAAX,CAA7C,EAEA,MAAO,WAAM,CACXF,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,CAAsCR,QAAtC,CAAgD,CAAEO,OAAO,CAAE,IAAX,CAAhD,EACD,CAFD,CAGD,CAjBQ,CAiBN,EAjBM,CAAT,CAmBA,GAAIV,OAAJ,CAAa,CACX,mBACE,YAAK,SAAS,CAAC,aAAf,CAA6B,GAAG,CAAED,GAAlC,uBACE,KAAC,QAAD,EACE,KAAK,CAAED,IAAI,CAACc,OADd,CAEE,QAAQ,CAAE,kBAACC,CAAD,QAAOX,CAAAA,UAAU,CAACJ,IAAI,CAACgB,EAAN,CAAUD,CAAC,EAAI,EAAf,CAAjB,EAFZ,EADF,EADF,CAQD,CAED,mBACE,YAAK,SAAS,CAAC,kBAAf,CAAkC,OAAO,CAAE,yBAAMZ,CAAAA,UAAU,CAAC,IAAD,CAAhB,EAA3C,uBACE,YAAK,SAAS,CAAC,cAAf,uBACE,KAAC,QAAD,CAAU,QAAV,EAAmB,MAAM,CAAEH,IAAI,CAACc,OAAL,EAAgB,eAA3C,EADF,EADF,EADF,CAOD,CA1CD,CA4CA,cAAef,CAAAA,UAAf","sourcesContent":["import MDEditor from \"@uiw/react-md-editor\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useActions } from \"../hooks/use-actions\"\nimport { Cell } from \"../redux\"\nimport \"./text-editor.css\"\n\ninterface TextEditorProps {\n  cell: Cell\n}\n\nconst TextEditor: React.FC<TextEditorProps> = ({ cell }) => {\n  const ref = useRef<HTMLDivElement | null>(null)\n  const [editing, setEditing] = useState(false)\n  const { updateCell } = useActions()\n\n  useEffect(() => {\n    const listener = (event: MouseEvent) => {\n      if (\n        ref.current &&\n        event.target &&\n        ref.current.contains(event.target as Node)\n      ) {\n        return\n      }\n\n      setEditing(false)\n    }\n    document.addEventListener(\"click\", listener, { capture: true })\n\n    return () => {\n      document.removeEventListener(\"click\", listener, { capture: true })\n    }\n  }, [])\n\n  if (editing) {\n    return (\n      <div className='text-editor' ref={ref}>\n        <MDEditor\n          value={cell.content}\n          onChange={(v) => updateCell(cell.id, v || \"\")}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div className='text-editor card' onClick={() => setEditing(true)}>\n      <div className='card-content'>\n        <MDEditor.Markdown source={cell.content || \"Click to edit\"} />\n      </div>\n    </div>\n  )\n}\n\nexport default TextEditor\n"]},"metadata":{},"sourceType":"module"}