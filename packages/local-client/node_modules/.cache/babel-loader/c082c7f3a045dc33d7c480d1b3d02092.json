{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/faiz/react-tutorial/readme-generator/src/components/code-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport bundle from \"../bundler\";\nimport { useActions } from \"../hooks/use-actions\";\nimport CodeEditor from \"./code-editor\";\nimport Preview from \"./preview\";\nimport Resizable from \"./resizable\";\n\nconst CodeCell = ({\n  cell\n}) => {\n  _s();\n\n  const [code, setCode] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const {\n    updateCell\n  } = useActions();\n  useEffect(() => {\n    const timer = setTimeout(async () => {\n      const output = await bundle(cell.content);\n      setCode(output.code); // setErr(output.err)\n    }, 750);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [cell.content]);\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    direction: \"vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"calc(100% - 10px)\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Resizable, {\n        direction: \"horizontal\",\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          initialValue: cell.content,\n          onChange: value => updateCell(cell.id, value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        code: code,\n        err: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodeCell, \"kuV521Q7tqEgHZyL16KA79jNncg=\", false, function () {\n  return [useActions];\n});\n\n_c = CodeCell;\nexport default CodeCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"sources":["/home/faiz/react-tutorial/readme-generator/src/components/code-cell.tsx"],"names":["useEffect","useState","bundle","useActions","CodeEditor","Preview","Resizable","CodeCell","cell","code","setCode","err","setErr","updateCell","timer","setTimeout","output","content","clearTimeout","height","display","flexDirection","value","id"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAMA,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAiBV,UAAU,EAAjC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAGC,UAAU,CAAC,YAAY;AACnC,YAAMC,MAAM,GAAG,MAAMd,MAAM,CAACM,IAAI,CAACS,OAAN,CAA3B;AACAP,MAAAA,OAAO,CAACM,MAAM,CAACP,IAAR,CAAP,CAFmC,CAGnC;AACD,KAJuB,EAIrB,GAJqB,CAAxB;AAMA,WAAO,MAAM;AACXS,MAAAA,YAAY,CAACJ,KAAD,CAAZ;AACD,KAFD;AAGD,GAVQ,EAUN,CAACN,IAAI,CAACS,OAAN,CAVM,CAAT;AAYA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AACLE,QAAAA,MAAM,EAAE,mBADH;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,aAAa,EAAE;AAHV,OADT;AAAA,8BAOE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,YAAY,EAAEb,IAAI,CAACS,OADrB;AAEE,UAAA,QAAQ,EAAGK,KAAD,IAAWT,UAAU,CAACL,IAAI,CAACe,EAAN,EAAUD,KAAV;AAFjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEb,IAAf;AAAqB,QAAA,GAAG,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApCD;;GAAMJ,Q;UAGmBJ,U;;;KAHnBI,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport bundle from \"../bundler\"\nimport { useActions } from \"../hooks/use-actions\"\nimport { Cell } from \"../redux\"\nimport CodeEditor from \"./code-editor\"\nimport Preview from \"./preview\"\nimport Resizable from \"./resizable\"\n\ninterface CodeCellProps {\n  cell: Cell\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\n  const [code, setCode] = useState(\"\")\n  const [err, setErr] = useState(\"\")\n  const { updateCell } = useActions()\n\n  useEffect(() => {\n    const timer = setTimeout(async () => {\n      const output = await bundle(cell.content)\n      setCode(output.code)\n      // setErr(output.err)\n    }, 750)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [cell.content])\n\n  return (\n    <Resizable direction='vertical'>\n      <div\n        style={{\n          height: \"calc(100% - 10px)\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        <Resizable direction='horizontal'>\n          <CodeEditor\n            initialValue={cell.content}\n            onChange={(value) => updateCell(cell.id, value)}\n          />\n        </Resizable>\n        <Preview code={code} err={err} />\n      </div>\n    </Resizable>\n  )\n}\n\nexport default CodeCell\n"]},"metadata":{},"sourceType":"module"}