{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment}from\"react\";import{useTypedSelector}from\"../hooks/use-typed-selector\";import AddCell from\"./add-cell\";import CellListItem from\"./cell-list-item\";import\"./cell-list.css\";var CellList=function CellList(){var cells=useTypedSelector(function(_ref){var _ref$cells=_ref.cells,order=_ref$cells.order,data=_ref$cells.data;return order.map(function(id){return data[id];});});var renderedCells=cells.map(function(cell){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(CellListItem,{cell:cell}),/*#__PURE__*/_jsx(AddCell,{previousCellId:cell.id})]},cell.id);});return/*#__PURE__*/_jsxs(\"div\",{className:\"cell-list\",children:[/*#__PURE__*/_jsx(AddCell,{forceVisible:cells.length===0,previousCellId:null}),renderedCells]});};export default CellList;","map":{"version":3,"sources":["/home/faiz/react-tutorial/readme-generator/jstrings/packages/local-client/src/components/cell-list.tsx"],"names":["Fragment","useTypedSelector","AddCell","CellListItem","CellList","cells","order","data","map","id","renderedCells","cell","length"],"mappings":"wFAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,gBAAT,KAAiC,6BAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kBAAzB,CACA,MAAO,iBAAP,CAEA,GAAMC,CAAAA,QAAkB,CAAG,QAArBA,CAAAA,QAAqB,EAAM,CAC/B,GAAMC,CAAAA,KAAK,CAAGJ,gBAAgB,CAAC,mCAAGI,KAAH,CAAYC,KAAZ,YAAYA,KAAZ,CAAmBC,IAAnB,YAAmBA,IAAnB,OAC7BD,CAAAA,KAAK,CAACE,GAAN,CAAU,SAACC,EAAD,QAAQF,CAAAA,IAAI,CAACE,EAAD,CAAZ,EAAV,CAD6B,EAAD,CAA9B,CAIA,GAAMC,CAAAA,aAAa,CAAGL,KAAK,CAACG,GAAN,CAAU,SAACG,IAAD,qBAC9B,MAAC,QAAD,yBACE,KAAC,YAAD,EAAc,IAAI,CAAEA,IAApB,EADF,cAEE,KAAC,OAAD,EAAS,cAAc,CAAEA,IAAI,CAACF,EAA9B,EAFF,GAAeE,IAAI,CAACF,EAApB,CAD8B,EAAV,CAAtB,CAOA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,OAAD,EAAS,YAAY,CAAEJ,KAAK,CAACO,MAAN,GAAiB,CAAxC,CAA2C,cAAc,CAAE,IAA3D,EADF,CAGGF,aAHH,GADF,CAOD,CAnBD,CAqBA,cAAeN,CAAAA,QAAf","sourcesContent":["import { Fragment } from \"react\"\nimport { useTypedSelector } from \"../hooks/use-typed-selector\"\nimport AddCell from \"./add-cell\"\nimport CellListItem from \"./cell-list-item\"\nimport \"./cell-list.css\"\n\nconst CellList: React.FC = () => {\n  const cells = useTypedSelector(({ cells: { order, data } }) =>\n    order.map((id) => data[id])\n  )\n\n  const renderedCells = cells.map((cell) => (\n    <Fragment key={cell.id}>\n      <CellListItem cell={cell} />\n      <AddCell previousCellId={cell.id} />\n    </Fragment>\n  ))\n\n  return (\n    <div className='cell-list'>\n      <AddCell forceVisible={cells.length === 0} previousCellId={null} />\n\n      {renderedCells}\n    </div>\n  )\n}\n\nexport default CellList\n"]},"metadata":{},"sourceType":"module"}