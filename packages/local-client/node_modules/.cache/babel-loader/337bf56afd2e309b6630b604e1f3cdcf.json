{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/faiz/react-tutorial/readme-generator/src/components/cell-list.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport CellListItem from \"./cell-list-item\";\n\nconst CellList = () => {\n  _s();\n\n  const cells = useTypedSelector(({\n    cells: {\n      order,\n      data\n    }\n  }) => order.map(id => data[id]));\n  const renderedCells = cells.map(cell => /*#__PURE__*/_jsxDEV(CellListItem, {\n    cell: cell\n  }, cell.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedCells\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CellList, \"ij3ho+NMbIxaBKnXgl+evU0tiZI=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = CellList;\nexport default CellList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellList\");","map":{"version":3,"sources":["/home/faiz/react-tutorial/readme-generator/src/components/cell-list.tsx"],"names":["React","useTypedSelector","CellListItem","CellList","cells","order","data","map","id","renderedCells","cell"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,KAAK,GAAGH,gBAAgB,CAAC,CAAC;AAAEG,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAT,GAAD,KAC7BD,KAAK,CAACE,GAAN,CAAWC,EAAD,IAAQF,IAAI,CAACE,EAAD,CAAtB,CAD4B,CAA9B;AAIA,QAAMC,aAAa,GAAGL,KAAK,CAACG,GAAN,CAAWG,IAAD,iBAC9B,QAAC,YAAD;AAA4B,IAAA,IAAI,EAAEA;AAAlC,KAAmBA,IAAI,CAACF,EAAxB;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAGA,sBAAO;AAAA,cAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CATD;;GAAMN,Q;UACUF,gB;;;KADVE,Q;AAWN,eAAeA,QAAf","sourcesContent":["import React from \"react\"\nimport { useTypedSelector } from \"../hooks/use-typed-selector\"\nimport CellListItem from \"./cell-list-item\"\n\nconst CellList: React.FC = () => {\n  const cells = useTypedSelector(({ cells: { order, data } }) =>\n    order.map((id) => data[id])\n  )\n\n  const renderedCells = cells.map((cell) => (\n    <CellListItem key={cell.id} cell={cell} />\n  ))\n  return <div>{renderedCells}</div>\n}\n\nexport default CellList\n"]},"metadata":{},"sourceType":"module"}